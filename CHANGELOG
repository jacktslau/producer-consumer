# Changelog

## [0.1.0] - Simple Producer and Consumer
- added Account, Transaction, Consumer, Producer, MessageQueue class
- added Spec
- added main script to test producer and consumer flow
- spent: 4 hours

## [0.2.0] - Add Web Interface to start/stop Producers and Consumers
- used sinatra to serve web interface
- spent: 2 hours

## [0.3.0] - Implement Producers and Consumers logic
- producer create random transaction and push into the queue, then update account balance
- consumer received the transaction from queue and stream it to any client listening to the websocket
- `/toggle` API to toggle start/stop producers and consumers, return all accounts and transactions in json format when stop
- `/consumer/log` shows consumer log stream web page
- Add Dockerfile to build docker image
- spent: 4 hours

## [0.4.0] - Apply MongoDB for data persistence
- add docker-compose to run mongodb locally
- revise data model to use mongo document
- move save logic into account service
- apply mongoid orm
- TODO: integration spec
- spent: 4 hours

## [0.5.0] - Apply Apache Kafka for message queue
- Separate producer and consumer into two services
- Move common modules into /common and build as gem
- Issue: Kafka container seems need time to warm up, so I added a startup delay in both consumer and producer startup script
- Issue: Producer and Consumer containers take quite a long time to establish Kafka connection, docker network issue?
- TODO: retry on Kafka connection
- spent: 5 hours